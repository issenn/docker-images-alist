# yaml-language-server: $schema=https://json.schemastore.org/github-workflow
name: Build and Push Docker Image

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
    # only build when important files change
    paths-ignore:
      - 'README.md'
      - '.github/workflows/linter.yml'
      - '.github/linters/**'
  pull_request:
    branches:
      - 'master'
    # only build when important files change
    paths-ignore:
      - 'README.md'
      - '.github/workflows/linter.yml'
      - '.github/linters/**'
  schedule:
    # re-run montly to keep image fesh with upstream base images
    - cron: '0 12 * * *'
  workflow_dispatch:
    # run whenever we want!

env:
  TZ: 'Asia/Shanghai'
  REGISTRY: ghcr.io
  IMAGE: issenn/alist
  IMAGE_NAME: alist

jobs:
  build-and-push:
    name: Build and Push Docker Image
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-20.04

    # 这里用于定义 GITHUB_TOKEN 的权限
    permissions:
      packages: write
      contents: read

    env:
      RUN_CACHE: true
      DOCKER_PLATFORMS: linux/amd64,linux/arm64,linux/arm/v7,linux/386,linux/arm/v6,linux/s390x
      working-directory: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: 'Xhofe/alist'
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN || github.token }}

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Build web
        run: bash build.sh web

      # - name: Prepare docker image name
      #   id: image_names
      #   run: |
      #     IMAGES="${GITHUB_REPOSITORY/docker-/},ghcr.io/${GITHUB_REPOSITORY/docker-/}"
      #     echo ::set-output name=images::${IMAGES}

      # This makes image builds fast!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # we need qemu and buildx so we can build multiple platforms later
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        # with:
        #   platforms: all

      # BuildKit (used with `docker buildx`) is the best way to build images
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        # with:
        #   driver-opts: network=host

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 登录到 GitHub Packages 容器仓库
      # 注意 secrets.GITHUB_TOKEN 不需要手动添加，直接就可以用
      - name: Log in to the Container registry
        # if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME || github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
          tags: |
            type=raw,enable=true,priority=200,prefix=,suffix=,value=latest
            type=raw,enable=false,priority=200,prefix=,suffix=,value=v1.0.0-{{branch}}-{{sha}}
            type=schedule,enable=false,priority=1000,prefix=SNAPSHOT-,suffix=,pattern={{date 'YYYYMMDD'}}
            type=schedule,enable=false,priority=1000,prefix=,suffix=,pattern=nightly
            type=ref,enable=false,priority=600,prefix=,suffix=,event=branch
            type=ref,enable=false,priority=600,prefix=,suffix=,event=tag
            type=ref,enable=false,priority=600,prefix=pr-,suffix=,event=pr
            type=semver,enable=false,priority=900,prefix=,suffix=,pattern=v{{version}},value=
            type=semver,enable=false,priority=900,prefix=,suffix=,pattern=v{{major}},value=
            type=semver,enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }},priority=900,prefix=,suffix=,pattern=v{{major}}.{{minor}},value=
            type=pep440,enable=false,priority=900,prefix=,suffix=,pattern=v{{version}},value=
            type=match,enable=false,priority=800,prefix=,suffix=,pattern=p1-v(\d.\d.\d),group=1,value=
            type=edge,enable=false,priority=700,prefix=,suffix=,branch=$repo.default_branch
            type=sha,enable=false,priority=100,prefix={{branch}}-,suffix=,format=short

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          # push: true
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ env.DOCKER_PLATFORMS }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Show image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Inspect image
        run: |
          docker buildx imagetools inspect \
          ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
